<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
     http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable component scanning (beware that this does not enable mapper scanning!) -->
	<context:component-scan base-package="iidooo.*" />

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<!-- 数据库用户管理 -->

<!-- 	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
				<security:user name="bob" password="bobspassword" authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> -->

	<!-- <security:authentication-manager> <security:authentication-provider> <security:jdbc-user-service data-source-ref="dataSource" /> </security:authentication-provider> 
		</security:authentication-manager> -->

<!-- 	<security:http auto-config='true'>
		<security:intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/**" access="ROLE_USER" />
		<security:form-login />
	</security:http> -->

	<!-- 数据源配置 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	
<!-- 	<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:cms.properties</value>
			</list>
		</property>
		<qualifier value="main"/>
	</bean>
	<bean id="propertyUtil" class="iidooo.framework.utility.PropertyUtil">
		<property name="properties" ref="properties"/>
	</bean> -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> <tx:attributes> <tx:method name="get*" read-only="true"></tx:method> <tx:method 
		name="select*" read-only="true"></tx:method> <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" /> <tx:method name="delete*" propagation="REQUIRED" 
		rollback-for="Exception" /> <tx:method name="*"></tx:method> </tx:attributes> </tx:advice> <aop:config> <aop:pointcut id="txOperation" expression="execution(* 
		cn.co.yazaki.rivon.purchaseInvoice.service.impl.*Impl.*(..))"></aop:pointcut> <aop:pointcut id="txOperation1" expression="execution(* cn.co.yazaki.rivon.master.service.impl.*Impl.*(..))"></aop:pointcut> 
		<aop:pointcut id="txOperation2" expression="execution(* cn.co.yazaki.rivon.system.service.impl.*Impl.*(..))"></aop:pointcut> <aop:advisor pointcut-ref="txOperation" 
		advice-ref="txAdvice"></aop:advisor> <aop:advisor pointcut-ref="txOperation1" advice-ref="txAdvice"></aop:advisor> <aop:advisor pointcut-ref="txOperation2" 
		advice-ref="txAdvice"></aop:advisor> </aop:config> -->

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="iidooo.cms.dto iidooo.framework.dto" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="iidooo.cms.dao iidooo.framework.dao" />
	</bean>
<!-- 
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		获取标签配置
		<property name="freemarkerVariables" value="#{propertyUtil.getBeanMap('directive.')}" />
		<property name="templateLoaderPath" value="" />
		<property name="freemarkerSettings">
			<props>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="template_update_delay">5</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">0.######</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="auto_import">/WEB-INF/ftl/jeecms/index.ftl as p,/WEB-INF/ftl/spring.ftl as s</prop>
			</props>
		</property>
	</bean> -->
</beans>
